class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        //corner case
        if(matrix==null||matrix.length==0||matrix[0].length==0){
            return new ArrayList();
        }
        int m=matrix.length;
        int n=matrix[0].length;
        int top=0;
        int bottom=m-1;
        int left=0;
        int right=n-1;
        List<Integer> list=new ArrayList();
        while(list.size()<m*n){
            for(int j=left;j<=right&&list.size()<m*n;j++){
                list.add(matrix[top][j]);
            }
            top++;
            for(int i=top;i<=bottom&&list.size()<m*n;i++){
                list.add(matrix[i][right]);
            }
            right--;
            for(int j=right;j>=left&&list.size()<m*n;j--){
                list.add(matrix[bottom][j]);
            }
            bottom--;
            for(int i=bottom;i>=top&&list.size()<m*n;i--){
                list.add(matrix[i][left]);
            }
            left++;
        }
        return list;
    }
}
